diff --git a/node_modules/perspectivets/build/index.d.ts b/node_modules/perspectivets/build/index.d.ts
index 4f2fca6..94e8c91 100644
--- a/node_modules/perspectivets/build/index.d.ts
+++ b/node_modules/perspectivets/build/index.d.ts
@@ -33,7 +33,7 @@ export default class Perspective {
     private cvso;
     private ctxo;
     private ctxt;
-    constructor(ctxd: CanvasRenderingContext2D, image: HTMLImageElement);
+    constructor(ctxd: CanvasRenderingContext2D, image: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement);
     draw(q: Quadrilateral): void;
     private create_canvas_context;
     private _applyMask;
diff --git a/node_modules/perspectivets/build/index.es.js b/node_modules/perspectivets/build/index.es.js
index e8d9a62..6e55943 100644
--- a/node_modules/perspectivets/build/index.es.js
+++ b/node_modules/perspectivets/build/index.es.js
@@ -24,13 +24,13 @@ var Perspective = /** @class */ (function () {
         if (!ctxd || !ctxd.strokeStyle) {
             return;
         }
-        if (!image || !image.width || !image.height) {
+        if (!image || !image.offsetWidth || !image.offsetHeight) {
             return;
         }
         // prepare a <canvas> for the image
         var cvso = document.createElement("canvas");
-        cvso.width = Math.round(image.width);
-        cvso.height = Math.round(image.height);
+        cvso.width = Math.round(image.offsetHeight);
+        cvso.height = Math.round(image.offsetHeight);
         var ctxo = cvso.getContext("2d");
         ctxo.drawImage(image, 0, 0, cvso.width, cvso.height);
         // prepare a <canvas> for the transformed image
@@ -138,8 +138,8 @@ var Perspective = /** @class */ (function () {
         }
         // set a clipping path and draw the transformed image on the destination canvas.
         this.ctxd.save();
+        this._applyMask(this.ctxt, q);
         this.ctxd.drawImage(ctxt.canvas, 0, 0);
-        this._applyMask(this.ctxd, q);
         this.ctxd.restore();
     };
     Perspective.prototype.create_canvas_context = function (w, h) {
diff --git a/node_modules/perspectivets/build/index.js b/node_modules/perspectivets/build/index.js
index 6e61b4c..0780f10 100644
--- a/node_modules/perspectivets/build/index.js
+++ b/node_modules/perspectivets/build/index.js
@@ -28,13 +28,13 @@ var Perspective = /** @class */ (function () {
         if (!ctxd || !ctxd.strokeStyle) {
             return;
         }
-        if (!image || !image.width || !image.height) {
+        if (!image || !image.offsetWidth || !image.offsetHeight) {
             return;
         }
         // prepare a <canvas> for the image
         var cvso = document.createElement("canvas");
-        cvso.width = Math.round(image.width);
-        cvso.height = Math.round(image.height);
+        cvso.width = Math.round(image.offsetWidth);
+        cvso.height = Math.round(image.offsetHeight);
         var ctxo = cvso.getContext("2d");
         ctxo.drawImage(image, 0, 0, cvso.width, cvso.height);
         // prepare a <canvas> for the transformed image
